// pkg/protocol/protocol.proto
// Author: Manoj Myneni
// UIC, Spring 2025
//
// gRPC definitions for the AVID-FP protocol: Disperse, Echo, Ready, and Retrieve.
// These RPCs allow clients and servers to coordinate erasure-coded fragment dispersal
// and integrity-verified retrieval in a fault-tolerant distributed object store.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pkg/protocol/protocol.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Fingerprinted cross‑checksum: per‑fragment hash, per‑fragment FP, plus the FP seed
type FPCC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hashes        [][]byte               `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty"`   // SHA‑256 hash of each fragment
	Fps           []uint64               `protobuf:"varint,2,rep,packed,name=fps,proto3" json:"fps,omitempty"` // homomorphic fingerprint of each fragment
	Seed          uint64                 `protobuf:"varint,3,opt,name=seed,proto3" json:"seed,omitempty"`      // secret evaluation point used for all fingerprints
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FPCC) Reset() {
	*x = FPCC{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FPCC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FPCC) ProtoMessage() {}

func (x *FPCC) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FPCC.ProtoReflect.Descriptor instead.
func (*FPCC) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *FPCC) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

func (x *FPCC) GetFps() []uint64 {
	if x != nil {
		return x.Fps
	}
	return nil
}

func (x *FPCC) GetSeed() uint64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

type DisperseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	FragmentIndex uint32                 `protobuf:"varint,2,opt,name=fragment_index,json=fragmentIndex,proto3" json:"fragment_index,omitempty"`
	Fragment      []byte                 `protobuf:"bytes,3,opt,name=fragment,proto3" json:"fragment,omitempty"`
	Fpcc          *FPCC                  `protobuf:"bytes,4,opt,name=fpcc,proto3" json:"fpcc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisperseRequest) Reset() {
	*x = DisperseRequest{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisperseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisperseRequest) ProtoMessage() {}

func (x *DisperseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisperseRequest.ProtoReflect.Descriptor instead.
func (*DisperseRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *DisperseRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *DisperseRequest) GetFragmentIndex() uint32 {
	if x != nil {
		return x.FragmentIndex
	}
	return 0
}

func (x *DisperseRequest) GetFragment() []byte {
	if x != nil {
		return x.Fragment
	}
	return nil
}

func (x *DisperseRequest) GetFpcc() *FPCC {
	if x != nil {
		return x.Fpcc
	}
	return nil
}

type DisperseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisperseResponse) Reset() {
	*x = DisperseResponse{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisperseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisperseResponse) ProtoMessage() {}

func (x *DisperseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisperseResponse.ProtoReflect.Descriptor instead.
func (*DisperseResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *DisperseResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DisperseResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type EchoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Fpcc          *FPCC                  `protobuf:"bytes,2,opt,name=fpcc,proto3" json:"fpcc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *EchoRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *EchoRequest) GetFpcc() *FPCC {
	if x != nil {
		return x.Fpcc
	}
	return nil
}

type EchoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *EchoResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *EchoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReadyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Fpcc          *FPCC                  `protobuf:"bytes,2,opt,name=fpcc,proto3" json:"fpcc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyRequest) Reset() {
	*x = ReadyRequest{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyRequest) ProtoMessage() {}

func (x *ReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyRequest.ProtoReflect.Descriptor instead.
func (*ReadyRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *ReadyRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *ReadyRequest) GetFpcc() *FPCC {
	if x != nil {
		return x.Fpcc
	}
	return nil
}

type ReadyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadyResponse) Reset() {
	*x = ReadyResponse{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyResponse) ProtoMessage() {}

func (x *ReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyResponse.ProtoReflect.Descriptor instead.
func (*ReadyResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *ReadyResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ReadyResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RetrieveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	FragmentIndex uint32                 `protobuf:"varint,2,opt,name=fragment_index,json=fragmentIndex,proto3" json:"fragment_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveRequest) Reset() {
	*x = RetrieveRequest{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveRequest) ProtoMessage() {}

func (x *RetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveRequest.ProtoReflect.Descriptor instead.
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RetrieveRequest) GetFragmentIndex() uint32 {
	if x != nil {
		return x.FragmentIndex
	}
	return 0
}

type RetrieveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Fragment      []byte                 `protobuf:"bytes,3,opt,name=fragment,proto3" json:"fragment,omitempty"`
	FragmentIndex uint32                 `protobuf:"varint,4,opt,name=fragment_index,json=fragmentIndex,proto3" json:"fragment_index,omitempty"`
	Fpcc          *FPCC                  `protobuf:"bytes,5,opt,name=fpcc,proto3" json:"fpcc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveResponse) Reset() {
	*x = RetrieveResponse{}
	mi := &file_pkg_protocol_protocol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveResponse) ProtoMessage() {}

func (x *RetrieveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protocol_protocol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveResponse.ProtoReflect.Descriptor instead.
func (*RetrieveResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protocol_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *RetrieveResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *RetrieveResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RetrieveResponse) GetFragment() []byte {
	if x != nil {
		return x.Fragment
	}
	return nil
}

func (x *RetrieveResponse) GetFragmentIndex() uint32 {
	if x != nil {
		return x.FragmentIndex
	}
	return 0
}

func (x *RetrieveResponse) GetFpcc() *FPCC {
	if x != nil {
		return x.Fpcc
	}
	return nil
}

var File_pkg_protocol_protocol_proto protoreflect.FileDescriptor

const file_pkg_protocol_protocol_proto_rawDesc = "" +
	"\n" +
	"\x1bpkg/protocol/protocol.proto\x12\bprotocol\"D\n" +
	"\x04FPCC\x12\x16\n" +
	"\x06hashes\x18\x01 \x03(\fR\x06hashes\x12\x10\n" +
	"\x03fps\x18\x02 \x03(\x04R\x03fps\x12\x12\n" +
	"\x04seed\x18\x03 \x01(\x04R\x04seed\"\x95\x01\n" +
	"\x0fDisperseRequest\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12%\n" +
	"\x0efragment_index\x18\x02 \x01(\rR\rfragmentIndex\x12\x1a\n" +
	"\bfragment\x18\x03 \x01(\fR\bfragment\x12\"\n" +
	"\x04fpcc\x18\x04 \x01(\v2\x0e.protocol.FPCCR\x04fpcc\"8\n" +
	"\x10DisperseResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"N\n" +
	"\vEchoRequest\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12\"\n" +
	"\x04fpcc\x18\x02 \x01(\v2\x0e.protocol.FPCCR\x04fpcc\"4\n" +
	"\fEchoResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"O\n" +
	"\fReadyRequest\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12\"\n" +
	"\x04fpcc\x18\x02 \x01(\v2\x0e.protocol.FPCCR\x04fpcc\"5\n" +
	"\rReadyResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"U\n" +
	"\x0fRetrieveRequest\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12%\n" +
	"\x0efragment_index\x18\x02 \x01(\rR\rfragmentIndex\"\x9f\x01\n" +
	"\x10RetrieveResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x1a\n" +
	"\bfragment\x18\x03 \x01(\fR\bfragment\x12%\n" +
	"\x0efragment_index\x18\x04 \x01(\rR\rfragmentIndex\x12\"\n" +
	"\x04fpcc\x18\x05 \x01(\v2\x0e.protocol.FPCCR\x04fpcc2\x82\x02\n" +
	"\tDispersal\x12A\n" +
	"\bDisperse\x12\x19.protocol.DisperseRequest\x1a\x1a.protocol.DisperseResponse\x125\n" +
	"\x04Echo\x12\x15.protocol.EchoRequest\x1a\x16.protocol.EchoResponse\x128\n" +
	"\x05Ready\x12\x16.protocol.ReadyRequest\x1a\x17.protocol.ReadyResponse\x12A\n" +
	"\bRetrieve\x12\x19.protocol.RetrieveRequest\x1a\x1a.protocol.RetrieveResponseBAZ?github.com/dattu/distributed_object_store/pkg/protocol;protocolb\x06proto3"

var (
	file_pkg_protocol_protocol_proto_rawDescOnce sync.Once
	file_pkg_protocol_protocol_proto_rawDescData []byte
)

func file_pkg_protocol_protocol_proto_rawDescGZIP() []byte {
	file_pkg_protocol_protocol_proto_rawDescOnce.Do(func() {
		file_pkg_protocol_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_protocol_protocol_proto_rawDesc), len(file_pkg_protocol_protocol_proto_rawDesc)))
	})
	return file_pkg_protocol_protocol_proto_rawDescData
}

var file_pkg_protocol_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_protocol_protocol_proto_goTypes = []any{
	(*FPCC)(nil),             // 0: protocol.FPCC
	(*DisperseRequest)(nil),  // 1: protocol.DisperseRequest
	(*DisperseResponse)(nil), // 2: protocol.DisperseResponse
	(*EchoRequest)(nil),      // 3: protocol.EchoRequest
	(*EchoResponse)(nil),     // 4: protocol.EchoResponse
	(*ReadyRequest)(nil),     // 5: protocol.ReadyRequest
	(*ReadyResponse)(nil),    // 6: protocol.ReadyResponse
	(*RetrieveRequest)(nil),  // 7: protocol.RetrieveRequest
	(*RetrieveResponse)(nil), // 8: protocol.RetrieveResponse
}
var file_pkg_protocol_protocol_proto_depIdxs = []int32{
	0, // 0: protocol.DisperseRequest.fpcc:type_name -> protocol.FPCC
	0, // 1: protocol.EchoRequest.fpcc:type_name -> protocol.FPCC
	0, // 2: protocol.ReadyRequest.fpcc:type_name -> protocol.FPCC
	0, // 3: protocol.RetrieveResponse.fpcc:type_name -> protocol.FPCC
	1, // 4: protocol.Dispersal.Disperse:input_type -> protocol.DisperseRequest
	3, // 5: protocol.Dispersal.Echo:input_type -> protocol.EchoRequest
	5, // 6: protocol.Dispersal.Ready:input_type -> protocol.ReadyRequest
	7, // 7: protocol.Dispersal.Retrieve:input_type -> protocol.RetrieveRequest
	2, // 8: protocol.Dispersal.Disperse:output_type -> protocol.DisperseResponse
	4, // 9: protocol.Dispersal.Echo:output_type -> protocol.EchoResponse
	6, // 10: protocol.Dispersal.Ready:output_type -> protocol.ReadyResponse
	8, // 11: protocol.Dispersal.Retrieve:output_type -> protocol.RetrieveResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_protocol_protocol_proto_init() }
func file_pkg_protocol_protocol_proto_init() {
	if File_pkg_protocol_protocol_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_protocol_protocol_proto_rawDesc), len(file_pkg_protocol_protocol_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_protocol_protocol_proto_goTypes,
		DependencyIndexes: file_pkg_protocol_protocol_proto_depIdxs,
		MessageInfos:      file_pkg_protocol_protocol_proto_msgTypes,
	}.Build()
	File_pkg_protocol_protocol_proto = out.File
	file_pkg_protocol_protocol_proto_goTypes = nil
	file_pkg_protocol_protocol_proto_depIdxs = nil
}
